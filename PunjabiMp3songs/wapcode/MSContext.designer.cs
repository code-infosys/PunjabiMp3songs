#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PunjabiMp3songs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbPunjabiMp3songs")]
	public partial class MSContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdminUser(AdminUser instance);
    partial void UpdateAdminUser(AdminUser instance);
    partial void DeleteAdminUser(AdminUser instance);
    partial void InsertUserUploader(UserUploader instance);
    partial void UpdateUserUploader(UserUploader instance);
    partial void DeleteUserUploader(UserUploader instance);
    partial void InsertMasterAlbum(MasterAlbum instance);
    partial void UpdateMasterAlbum(MasterAlbum instance);
    partial void DeleteMasterAlbum(MasterAlbum instance);
    partial void InsertRecommendedMapping(RecommendedMapping instance);
    partial void UpdateRecommendedMapping(RecommendedMapping instance);
    partial void DeleteRecommendedMapping(RecommendedMapping instance);
    partial void InsertTop20MonthMapping(Top20MonthMapping instance);
    partial void UpdateTop20MonthMapping(Top20MonthMapping instance);
    partial void DeleteTop20MonthMapping(Top20MonthMapping instance);
    partial void InsertTracksWraper(TracksWraper instance);
    partial void UpdateTracksWraper(TracksWraper instance);
    partial void DeleteTracksWraper(TracksWraper instance);
    partial void Insertmsgbox(msgbox instance);
    partial void Updatemsgbox(msgbox instance);
    partial void Deletemsgbox(msgbox instance);
    partial void InsertCloudUploading(CloudUploading instance);
    partial void UpdateCloudUploading(CloudUploading instance);
    partial void DeleteCloudUploading(CloudUploading instance);
    #endregion
		
		public MSContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbPunjabiMp3songsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MSContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminUser> AdminUsers
		{
			get
			{
				return this.GetTable<AdminUser>();
			}
		}
		
		public System.Data.Linq.Table<UserUploader> UserUploaders
		{
			get
			{
				return this.GetTable<UserUploader>();
			}
		}
		
		public System.Data.Linq.Table<MasterAlbum> MasterAlbums
		{
			get
			{
				return this.GetTable<MasterAlbum>();
			}
		}
		
		public System.Data.Linq.Table<RecommendedMapping> RecommendedMappings
		{
			get
			{
				return this.GetTable<RecommendedMapping>();
			}
		}
		
		public System.Data.Linq.Table<Top20MonthMapping> Top20MonthMappings
		{
			get
			{
				return this.GetTable<Top20MonthMapping>();
			}
		}
		
		public System.Data.Linq.Table<TracksWraper> TracksWrapers
		{
			get
			{
				return this.GetTable<TracksWraper>();
			}
		}
		
		public System.Data.Linq.Table<msgbox> msgboxes
		{
			get
			{
				return this.GetTable<msgbox>();
			}
		}
		
		public System.Data.Linq.Table<CloudUploading> CloudUploadings
		{
			get
			{
				return this.GetTable<CloudUploading>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminUser")]
	public partial class AdminUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _UserName;
		
		private string _EmailID;
		
		private string _UserPW;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnUserPWChanging(string value);
    partial void OnUserPWChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    #endregion
		
		public AdminUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPW", DbType="NVarChar(100)")]
		public string UserPW
		{
			get
			{
				return this._UserPW;
			}
			set
			{
				if ((this._UserPW != value))
				{
					this.OnUserPWChanging(value);
					this.SendPropertyChanging();
					this._UserPW = value;
					this.SendPropertyChanged("UserPW");
					this.OnUserPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserUploader")]
	public partial class UserUploader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _UserName;
		
		private string _EmailID;
		
		private string _UserPW;
		
		private string _MobileNo;
		
		private string _GmailUrl;
		
		private string _FacebookUrl;
		
		private string _UserImage;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<TracksWraper> _TracksWrapers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnUserPWChanging(string value);
    partial void OnUserPWChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnGmailUrlChanging(string value);
    partial void OnGmailUrlChanged();
    partial void OnFacebookUrlChanging(string value);
    partial void OnFacebookUrlChanged();
    partial void OnUserImageChanging(string value);
    partial void OnUserImageChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public UserUploader()
		{
			this._TracksWrapers = new EntitySet<TracksWraper>(new Action<TracksWraper>(this.attach_TracksWrapers), new Action<TracksWraper>(this.detach_TracksWrapers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPW", DbType="NVarChar(100)")]
		public string UserPW
		{
			get
			{
				return this._UserPW;
			}
			set
			{
				if ((this._UserPW != value))
				{
					this.OnUserPWChanging(value);
					this.SendPropertyChanging();
					this._UserPW = value;
					this.SendPropertyChanged("UserPW");
					this.OnUserPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GmailUrl", DbType="NVarChar(50)")]
		public string GmailUrl
		{
			get
			{
				return this._GmailUrl;
			}
			set
			{
				if ((this._GmailUrl != value))
				{
					this.OnGmailUrlChanging(value);
					this.SendPropertyChanging();
					this._GmailUrl = value;
					this.SendPropertyChanged("GmailUrl");
					this.OnGmailUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookUrl", DbType="NVarChar(50)")]
		public string FacebookUrl
		{
			get
			{
				return this._FacebookUrl;
			}
			set
			{
				if ((this._FacebookUrl != value))
				{
					this.OnFacebookUrlChanging(value);
					this.SendPropertyChanging();
					this._FacebookUrl = value;
					this.SendPropertyChanged("FacebookUrl");
					this.OnFacebookUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImage", DbType="NVarChar(200)")]
		public string UserImage
		{
			get
			{
				return this._UserImage;
			}
			set
			{
				if ((this._UserImage != value))
				{
					this.OnUserImageChanging(value);
					this.SendPropertyChanging();
					this._UserImage = value;
					this.SendPropertyChanged("UserImage");
					this.OnUserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserUploader_TracksWraper", Storage="_TracksWrapers", ThisKey="ID", OtherKey="UsrId")]
		public EntitySet<TracksWraper> TracksWrapers
		{
			get
			{
				return this._TracksWrapers;
			}
			set
			{
				this._TracksWrapers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TracksWrapers(TracksWraper entity)
		{
			this.SendPropertyChanging();
			entity.UserUploader = this;
		}
		
		private void detach_TracksWrapers(TracksWraper entity)
		{
			this.SendPropertyChanging();
			entity.UserUploader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterAlbum")]
	public partial class MasterAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _AlbumName;
		
		private System.Nullable<System.DateTime> _AlbumReleaseOn;
		
		private string _CoverImage;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private string _MetaTitle;
		
		private string _MetaTags;
		
		private string _MetaDescription;
		
		private string _SingerName;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<TracksWraper> _TracksWrapers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnAlbumNameChanging(string value);
    partial void OnAlbumNameChanged();
    partial void OnAlbumReleaseOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAlbumReleaseOnChanged();
    partial void OnCoverImageChanging(string value);
    partial void OnCoverImageChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnMetaTitleChanging(string value);
    partial void OnMetaTitleChanged();
    partial void OnMetaTagsChanging(string value);
    partial void OnMetaTagsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnSingerNameChanging(string value);
    partial void OnSingerNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MasterAlbum()
		{
			this._TracksWrapers = new EntitySet<TracksWraper>(new Action<TracksWraper>(this.attach_TracksWrapers), new Action<TracksWraper>(this.detach_TracksWrapers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumName", DbType="NVarChar(200)")]
		public string AlbumName
		{
			get
			{
				return this._AlbumName;
			}
			set
			{
				if ((this._AlbumName != value))
				{
					this.OnAlbumNameChanging(value);
					this.SendPropertyChanging();
					this._AlbumName = value;
					this.SendPropertyChanged("AlbumName");
					this.OnAlbumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumReleaseOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlbumReleaseOn
		{
			get
			{
				return this._AlbumReleaseOn;
			}
			set
			{
				if ((this._AlbumReleaseOn != value))
				{
					this.OnAlbumReleaseOnChanging(value);
					this.SendPropertyChanging();
					this._AlbumReleaseOn = value;
					this.SendPropertyChanged("AlbumReleaseOn");
					this.OnAlbumReleaseOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverImage", DbType="NVarChar(200)")]
		public string CoverImage
		{
			get
			{
				return this._CoverImage;
			}
			set
			{
				if ((this._CoverImage != value))
				{
					this.OnCoverImageChanging(value);
					this.SendPropertyChanging();
					this._CoverImage = value;
					this.SendPropertyChanged("CoverImage");
					this.OnCoverImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(200)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this.OnMetaTitleChanging(value);
					this.SendPropertyChanging();
					this._MetaTitle = value;
					this.SendPropertyChanged("MetaTitle");
					this.OnMetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTags", DbType="NVarChar(300)")]
		public string MetaTags
		{
			get
			{
				return this._MetaTags;
			}
			set
			{
				if ((this._MetaTags != value))
				{
					this.OnMetaTagsChanging(value);
					this.SendPropertyChanging();
					this._MetaTags = value;
					this.SendPropertyChanged("MetaTags");
					this.OnMetaTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(260)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingerName", DbType="NVarChar(200)")]
		public string SingerName
		{
			get
			{
				return this._SingerName;
			}
			set
			{
				if ((this._SingerName != value))
				{
					this.OnSingerNameChanging(value);
					this.SendPropertyChanging();
					this._SingerName = value;
					this.SendPropertyChanged("SingerName");
					this.OnSingerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterAlbum_TracksWraper", Storage="_TracksWrapers", ThisKey="ID", OtherKey="AlbumID")]
		public EntitySet<TracksWraper> TracksWrapers
		{
			get
			{
				return this._TracksWrapers;
			}
			set
			{
				this._TracksWrapers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TracksWrapers(TracksWraper entity)
		{
			this.SendPropertyChanging();
			entity.MasterAlbum = this;
		}
		
		private void detach_TracksWrapers(TracksWraper entity)
		{
			this.SendPropertyChanging();
			entity.MasterAlbum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecommendedMapping")]
	public partial class RecommendedMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private System.Nullable<decimal> _SongID;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<RecommendedMapping> _RecommendedMapping2;
		
		private EntityRef<RecommendedMapping> _RecommendedMapping1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnSongIDChanging(System.Nullable<decimal> value);
    partial void OnSongIDChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public RecommendedMapping()
		{
			this._RecommendedMapping2 = default(EntityRef<RecommendedMapping>);
			this._RecommendedMapping1 = default(EntityRef<RecommendedMapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._RecommendedMapping1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SongID
		{
			get
			{
				return this._SongID;
			}
			set
			{
				if ((this._SongID != value))
				{
					this.OnSongIDChanging(value);
					this.SendPropertyChanging();
					this._SongID = value;
					this.SendPropertyChanged("SongID");
					this.OnSongIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecommendedMapping_RecommendedMapping", Storage="_RecommendedMapping2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public RecommendedMapping RecommendedMapping2
		{
			get
			{
				return this._RecommendedMapping2.Entity;
			}
			set
			{
				RecommendedMapping previousValue = this._RecommendedMapping2.Entity;
				if (((previousValue != value) 
							|| (this._RecommendedMapping2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecommendedMapping2.Entity = null;
						previousValue.RecommendedMapping1 = null;
					}
					this._RecommendedMapping2.Entity = value;
					if ((value != null))
					{
						value.RecommendedMapping1 = this;
					}
					this.SendPropertyChanged("RecommendedMapping2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecommendedMapping_RecommendedMapping", Storage="_RecommendedMapping1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public RecommendedMapping RecommendedMapping1
		{
			get
			{
				return this._RecommendedMapping1.Entity;
			}
			set
			{
				RecommendedMapping previousValue = this._RecommendedMapping1.Entity;
				if (((previousValue != value) 
							|| (this._RecommendedMapping1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecommendedMapping1.Entity = null;
						previousValue.RecommendedMapping2 = null;
					}
					this._RecommendedMapping1.Entity = value;
					if ((value != null))
					{
						value.RecommendedMapping2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(decimal);
					}
					this.SendPropertyChanged("RecommendedMapping1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Top20MonthMapping")]
	public partial class Top20MonthMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private System.Nullable<decimal> _SongID;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnSongIDChanging(System.Nullable<decimal> value);
    partial void OnSongIDChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Top20MonthMapping()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SongID
		{
			get
			{
				return this._SongID;
			}
			set
			{
				if ((this._SongID != value))
				{
					this.OnSongIDChanging(value);
					this.SendPropertyChanging();
					this._SongID = value;
					this.SendPropertyChanged("SongID");
					this.OnSongIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TracksWraper")]
	public partial class TracksWraper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private System.Nullable<decimal> _AlbumID;
		
		private string _SongTitle;
		
		private string _SingerName;
		
		private string _CoverImage;
		
		private string _SongUrl1;
		
		private string _SongUrl2;
		
		private string _SongUrl3;
		
		private System.Nullable<decimal> _UsrId;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private string _MetaTitle;
		
		private string _MetaTags;
		
		private string _MetaDescription;
		
		private System.Nullable<decimal> _DownloadCount;
		
		private System.Nullable<bool> _IsApproved;
		
		private EntityRef<MasterAlbum> _MasterAlbum;
		
		private EntityRef<UserUploader> _UserUploader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnAlbumIDChanging(System.Nullable<decimal> value);
    partial void OnAlbumIDChanged();
    partial void OnSongTitleChanging(string value);
    partial void OnSongTitleChanged();
    partial void OnSingerNameChanging(string value);
    partial void OnSingerNameChanged();
    partial void OnCoverImageChanging(string value);
    partial void OnCoverImageChanged();
    partial void OnSongUrl1Changing(string value);
    partial void OnSongUrl1Changed();
    partial void OnSongUrl2Changing(string value);
    partial void OnSongUrl2Changed();
    partial void OnSongUrl3Changing(string value);
    partial void OnSongUrl3Changed();
    partial void OnUsrIdChanging(System.Nullable<decimal> value);
    partial void OnUsrIdChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnMetaTitleChanging(string value);
    partial void OnMetaTitleChanged();
    partial void OnMetaTagsChanging(string value);
    partial void OnMetaTagsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnDownloadCountChanging(System.Nullable<decimal> value);
    partial void OnDownloadCountChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    #endregion
		
		public TracksWraper()
		{
			this._MasterAlbum = default(EntityRef<MasterAlbum>);
			this._UserUploader = default(EntityRef<UserUploader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._MasterAlbum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongTitle", DbType="NVarChar(200)")]
		public string SongTitle
		{
			get
			{
				return this._SongTitle;
			}
			set
			{
				if ((this._SongTitle != value))
				{
					this.OnSongTitleChanging(value);
					this.SendPropertyChanging();
					this._SongTitle = value;
					this.SendPropertyChanged("SongTitle");
					this.OnSongTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingerName", DbType="NVarChar(200)")]
		public string SingerName
		{
			get
			{
				return this._SingerName;
			}
			set
			{
				if ((this._SingerName != value))
				{
					this.OnSingerNameChanging(value);
					this.SendPropertyChanging();
					this._SingerName = value;
					this.SendPropertyChanged("SingerName");
					this.OnSingerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverImage", DbType="NVarChar(200)")]
		public string CoverImage
		{
			get
			{
				return this._CoverImage;
			}
			set
			{
				if ((this._CoverImage != value))
				{
					this.OnCoverImageChanging(value);
					this.SendPropertyChanging();
					this._CoverImage = value;
					this.SendPropertyChanged("CoverImage");
					this.OnCoverImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongUrl1", DbType="NVarChar(500)")]
		public string SongUrl1
		{
			get
			{
				return this._SongUrl1;
			}
			set
			{
				if ((this._SongUrl1 != value))
				{
					this.OnSongUrl1Changing(value);
					this.SendPropertyChanging();
					this._SongUrl1 = value;
					this.SendPropertyChanged("SongUrl1");
					this.OnSongUrl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongUrl2", DbType="NVarChar(500)")]
		public string SongUrl2
		{
			get
			{
				return this._SongUrl2;
			}
			set
			{
				if ((this._SongUrl2 != value))
				{
					this.OnSongUrl2Changing(value);
					this.SendPropertyChanging();
					this._SongUrl2 = value;
					this.SendPropertyChanged("SongUrl2");
					this.OnSongUrl2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongUrl3", DbType="NVarChar(500)")]
		public string SongUrl3
		{
			get
			{
				return this._SongUrl3;
			}
			set
			{
				if ((this._SongUrl3 != value))
				{
					this.OnSongUrl3Changing(value);
					this.SendPropertyChanging();
					this._SongUrl3 = value;
					this.SendPropertyChanged("SongUrl3");
					this.OnSongUrl3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UsrId
		{
			get
			{
				return this._UsrId;
			}
			set
			{
				if ((this._UsrId != value))
				{
					if (this._UserUploader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsrIdChanging(value);
					this.SendPropertyChanging();
					this._UsrId = value;
					this.SendPropertyChanged("UsrId");
					this.OnUsrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(200)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this.OnMetaTitleChanging(value);
					this.SendPropertyChanging();
					this._MetaTitle = value;
					this.SendPropertyChanged("MetaTitle");
					this.OnMetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTags", DbType="NVarChar(300)")]
		public string MetaTags
		{
			get
			{
				return this._MetaTags;
			}
			set
			{
				if ((this._MetaTags != value))
				{
					this.OnMetaTagsChanging(value);
					this.SendPropertyChanging();
					this._MetaTags = value;
					this.SendPropertyChanged("MetaTags");
					this.OnMetaTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(260)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadCount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DownloadCount
		{
			get
			{
				return this._DownloadCount;
			}
			set
			{
				if ((this._DownloadCount != value))
				{
					this.OnDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._DownloadCount = value;
					this.SendPropertyChanged("DownloadCount");
					this.OnDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterAlbum_TracksWraper", Storage="_MasterAlbum", ThisKey="AlbumID", OtherKey="ID", IsForeignKey=true)]
		public MasterAlbum MasterAlbum
		{
			get
			{
				return this._MasterAlbum.Entity;
			}
			set
			{
				MasterAlbum previousValue = this._MasterAlbum.Entity;
				if (((previousValue != value) 
							|| (this._MasterAlbum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterAlbum.Entity = null;
						previousValue.TracksWrapers.Remove(this);
					}
					this._MasterAlbum.Entity = value;
					if ((value != null))
					{
						value.TracksWrapers.Add(this);
						this._AlbumID = value.ID;
					}
					else
					{
						this._AlbumID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("MasterAlbum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserUploader_TracksWraper", Storage="_UserUploader", ThisKey="UsrId", OtherKey="ID", IsForeignKey=true)]
		public UserUploader UserUploader
		{
			get
			{
				return this._UserUploader.Entity;
			}
			set
			{
				UserUploader previousValue = this._UserUploader.Entity;
				if (((previousValue != value) 
							|| (this._UserUploader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserUploader.Entity = null;
						previousValue.TracksWrapers.Remove(this);
					}
					this._UserUploader.Entity = value;
					if ((value != null))
					{
						value.TracksWrapers.Add(this);
						this._UsrId = value.ID;
					}
					else
					{
						this._UsrId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("UserUploader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msgbox")]
	public partial class msgbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _NAME;
		
		private string _EMAILID;
		
		private string _MSG;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private string _IP;
		
		private System.Nullable<bool> _ISactive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnEMAILIDChanging(string value);
    partial void OnEMAILIDChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnISactiveChanging(System.Nullable<bool> value);
    partial void OnISactiveChanged();
    #endregion
		
		public msgbox()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILID", DbType="NVarChar(50)")]
		public string EMAILID
		{
			get
			{
				return this._EMAILID;
			}
			set
			{
				if ((this._EMAILID != value))
				{
					this.OnEMAILIDChanging(value);
					this.SendPropertyChanging();
					this._EMAILID = value;
					this.SendPropertyChanged("EMAILID");
					this.OnEMAILIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(2000)")]
		public string MSG
		{
			get
			{
				return this._MSG;
			}
			set
			{
				if ((this._MSG != value))
				{
					this.OnMSGChanging(value);
					this.SendPropertyChanging();
					this._MSG = value;
					this.SendPropertyChanged("MSG");
					this.OnMSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISactive", DbType="Bit")]
		public System.Nullable<bool> ISactive
		{
			get
			{
				return this._ISactive;
			}
			set
			{
				if ((this._ISactive != value))
				{
					this.OnISactiveChanging(value);
					this.SendPropertyChanging();
					this._ISactive = value;
					this.SendPropertyChanged("ISactive");
					this.OnISactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CloudUploading")]
	public partial class CloudUploading : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private System.Nullable<decimal> _uid;
		
		private string _EmailID;
		
		private string _MobileNumber;
		
		private string _SongTitle;
		
		private string _SingerName;
		
		private string _FileName;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private string _IP;
		
		private string _AboutSong;
		
		private System.Nullable<bool> _IsApproved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnuidChanging(System.Nullable<decimal> value);
    partial void OnuidChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnSongTitleChanging(string value);
    partial void OnSongTitleChanged();
    partial void OnSingerNameChanging(string value);
    partial void OnSingerNameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnAboutSongChanging(string value);
    partial void OnAboutSongChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    #endregion
		
		public CloudUploading()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongTitle", DbType="NVarChar(200)")]
		public string SongTitle
		{
			get
			{
				return this._SongTitle;
			}
			set
			{
				if ((this._SongTitle != value))
				{
					this.OnSongTitleChanging(value);
					this.SendPropertyChanging();
					this._SongTitle = value;
					this.SendPropertyChanged("SongTitle");
					this.OnSongTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingerName", DbType="NVarChar(200)")]
		public string SingerName
		{
			get
			{
				return this._SingerName;
			}
			set
			{
				if ((this._SingerName != value))
				{
					this.OnSingerNameChanging(value);
					this.SendPropertyChanging();
					this._SingerName = value;
					this.SendPropertyChanged("SingerName");
					this.OnSingerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutSong", DbType="NVarChar(600)")]
		public string AboutSong
		{
			get
			{
				return this._AboutSong;
			}
			set
			{
				if ((this._AboutSong != value))
				{
					this.OnAboutSongChanging(value);
					this.SendPropertyChanging();
					this._AboutSong = value;
					this.SendPropertyChanged("AboutSong");
					this.OnAboutSongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
